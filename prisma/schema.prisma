generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "postgresql"
    url      = env("NEXT_PUBLIC_SUPABASE_URL") // uses connection pooling
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id        String    @id @unique @default(cuid())
    name      String?
    userName  String?   @unique
    email     String?   @unique
    image     String?
    createdAt DateTime  @default(now()) @map(name: "created_at")
    updatedAt DateTime  @updatedAt @map(name: "updated_at")
    bio       String?
    sessions  Session[]
    decks     Deck[]
    accounts   Account[]
    // likedDecks Deck[]   @relation("deck")

    @@map(name: "users")
}

model Deck {
    id          String   @id @unique @default(cuid())
    userId      String
    User        User     @relation(fields: [userId], references: [id])
    name        String
    description String
    types       String[]
    formatId    String
    Format      Format   @relation(fields: [formatId], references: [id])
    private     Boolean  @default(false)
    cardIds     String[]
    cardNames   String[]
    favorites   Int
    Types       Type[]
    typesId     String?
}

model Format {
    id                     String   @id @unique @default(cuid())
    name                   String
    allowedRegulationMarks String[]
    Deck                   Deck[]
}

model Type {
    id   String @id @unique @default(cuid())
    name String
    Deck Deck[]
}
